{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nexport default useApi = function useApi(apiFunc) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var request = function request() {\n    var response,\n        _args = arguments;\n    return _regeneratorRuntime.async(function request$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apiFunc.apply(void 0, _args));\n\n          case 3:\n            response = _context.sent;\n            console.log(\"1. response.data\");\n            setLoading(false);\n            setError(!response.ok);\n            console.log(\"Error: \") + response.ok;\n            setData(response.data);\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    data: data,\n    error: error,\n    loading: loading,\n    request: request\n  };\n};","map":{"version":3,"sources":["C:/APPS/DOMA_EVID/ReactNative/frontend/app/hooks/useApi.js"],"names":["useState","useApi","apiFunc","data","setData","error","setError","loading","setLoading","request","response","console","log","ok"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAeC,MAAM,GAAG,gBAACC,OAAD,EAAa;AAAA,kBACXF,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,MAC5BG,IAD4B;AAAA,MACtBC,OADsB;;AAAA,mBAETJ,QAAQ,CAAC,KAAD,CAFC;AAAA;AAAA,MAE5BK,KAF4B;AAAA,MAErBC,QAFqB;;AAAA,mBAGLN,QAAQ,CAAC,KAAD,CAHH;AAAA;AAAA,MAG5BO,OAH4B;AAAA,MAGnBC,UAHmB;;AAKnC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACdD,YAAAA,UAAU,CAAC,IAAD,CAAV;AADc;AAAA,6CAESN,OAAO,MAAP,eAFT;;AAAA;AAERQ,YAAAA,QAFQ;AAGdC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEAJ,YAAAA,UAAU,CAAC,KAAD,CAAV;AAEAF,YAAAA,QAAQ,CAAC,CAACI,QAAQ,CAACG,EAAX,CAAR;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,IAAyBF,QAAQ,CAACG,EAAlC;AAEAT,YAAAA,OAAO,CAACM,QAAQ,CAACP,IAAV,CAAP;AAVc,6CAWPO,QAXO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAcA,SAAO;AAAEP,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA,KAAR;AAAeE,IAAAA,OAAO,EAAPA,OAAf;AAAwBE,IAAAA,OAAO,EAAPA;AAAxB,GAAP;AACD,CApBD","sourcesContent":["import { useState } from \"react\";\n\nexport default useApi = (apiFunc) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const request = async (...args) => {\n    setLoading(true);\n    const response = await apiFunc(...args);\n    console.log(\"1. response.data\");\n    // console.log(\"2. response.data: \" + response.data);\n    setLoading(false);\n\n    setError(!response.ok);\n    console.log(\"Error: \") + response.ok;\n\n    setData(response.data);\n    return response;\n  };\n\n  return { data, error, loading, request };\n};\n"]},"metadata":{},"sourceType":"module"}