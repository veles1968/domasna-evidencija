{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\APPS\\\\DOMA_EVID\\\\ReactNative\\\\frontend\\\\app\\\\screens\\\\ArtikalsScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport artikalsApi from \"../api/artikals\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nvar fieldNames = [{\n  id: \"1\",\n  title: \"A\",\n  value: \"ime_artikal\"\n}, {\n  id: \"2\",\n  title: \"C\",\n  value: \"cena\"\n}, {\n  id: \"3\",\n  title: \"V\",\n  value: \"Vid\"\n}];\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, item.title));\n};\n\nfunction ArtikalsScreen(_ref2) {\n  var _this2 = this;\n\n  var navigation = _ref2.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      artikalData = _useState2[0],\n      setArtikalData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imeArtikal = _useState4[0],\n      setImeArtikal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedId = _useState10[0],\n      setSelectedId = _useState10[1];\n\n  var _useState11 = useState(\"ime_artikal\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sortType = _useState12[0],\n      setSortType = _useState12[1];\n\n  useEffect(function () {\n    console.log(\"1. useEffect\");\n    getAllArtikals();\n    console.log(\"sortType = \" + sortType);\n    console.log(\"2. useEffect\");\n  }, []);\n\n  var flattenObject = function flattenObject(ob) {\n    var toReturn = {};\n    Object.keys(ob).map(function (i) {\n      if (typeof ob[i] === \"object\" && ob[i] !== null) {\n        var flatObject = flattenObject(ob[i]);\n        Object.keys(flatObject).map(function (x) {\n          toReturn[i + \".\" + x] = flatObject[x];\n          return x;\n        });\n      } else {\n        toReturn[i] = ob[i];\n      }\n\n      return i;\n    });\n    return toReturn;\n  };\n\n  var getAllArtikals = function getAllArtikals() {\n    var response;\n    return _regeneratorRuntime.async(function getAllArtikals$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"START getAllArtikals-1\");\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(artikalsApi.getArtikals());\n\n          case 4:\n            response = _context.sent;\n            setLoading(false);\n            setError(!response.ok);\n            setArtikalData(response.data);\n            console.log(\"END getAllArtikals-1\");\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleChange = function handleChange(text) {\n    var response;\n    return _regeneratorRuntime.async(function handleChange$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"START handleChange\");\n            setImeArtikal(text);\n\n            if (text) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.log(\"2. handleChange: text is empty\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            console.log(\"imeArtikal = \" + imeArtikal);\n            console.log(\"text = \" + text);\n            setLoading(true);\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(artikalsApi.getArtikalsByIme(text));\n\n          case 10:\n            response = _context2.sent;\n            setLoading(false);\n            setError(!response.ok);\n            setArtikalData(response.data);\n            console.log(\"error = \" + error);\n            console.log(\"END  handleChange\");\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  {}\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return React.createElement(Item, {\n      item: item,\n      key: item.id,\n      onPress: function onPress() {\n        setSelectedId(item.id);\n        console.log(\"1. renderItem, item.value = \" + item.value);\n        console.log(\"2. renderItem, sortType = \" + sortType);\n        sortFlatList(item.value);\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    });\n  };\n\n  {}\n\n  var sortFlatList = function sortFlatList(type) {\n    console.log(\"START sortFlatList\");\n    var types = {\n      ime_artikal: \"ime_artikal\",\n      cena: \"cena\",\n      vid_id: \"vid_id\"\n    };\n    setSortType(type);\n    console.log(\"1. type = \" + type);\n    console.log(\"2. sortType = \" + sortType);\n\n    var sorted = _toConsumableArray(artikalData).sort(function (a, b) {\n      if (type === \"ime_artikal\") {\n        if (sortType !== \"ime_artikal\") {\n          console.log(\"SORT BY IME_ARTIKAL ASC\");\n          var fieldA = a.ime_artikal.toUpperCase();\n          var fieldB = b.ime_artikal.toUpperCase();\n        } else {\n          console.log(\"SORT BY IME_ARTIKAL DESC\");\n          var fieldA = b.ime_artikal.toUpperCase();\n          var fieldB = a.ime_artikal.toUpperCase();\n          setSortType(\"\");\n        }\n      } else if (type === \"cena\") {\n        console.log(\"SORT BY CENA\");\n        var fieldA = a.cena;\n        var fieldB = b.cena;\n      } else {\n        console.log(\"NO SORT\");\n        return 0;\n      }\n\n      if (fieldA < fieldB) {\n        return -1;\n      }\n\n      if (fieldA > fieldB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    setArtikalData(sorted);\n    console.log(\"END sortFlatList\");\n  };\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, \"Greshka!\"), React.createElement(Button, {\n    title: \"Povtori\",\n    onPress: getAllArtikals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: \"gray\",\n      borderWidth: 1\n    },\n    onChangeText: handleChange,\n    value: imeArtikal,\n    placeholder: \"Ime na Artikal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: fieldNames,\n    contentContainerStyle: {\n      flexDirection: \"row\"\n    },\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: artikalData,\n    keyExtractor: function keyExtractor(item) {\n      return item.artikal_id.toString();\n    },\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(Card, {\n        key: item.artikal_id,\n        title: item.ime_artikal + \" \\nID: \" + item.artikal_id,\n        subTitle: \"Cena: \" + item.cena + \"\\nVid: \" + item.ime_vid + \"\\nID: \" + item.vid_id + \"\\nDanok: \" + item.steuerrelevant,\n        onPress: function onPress() {\n          return navigation.navigate(routes.ARTIKAL_EDIT, item);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\nexport default ArtikalsScreen;","map":{"version":3,"sources":["C:/APPS/DOMA_EVID/ReactNative/frontend/app/screens/ArtikalsScreen.js"],"names":["React","useEffect","useState","axios","ActivityIndicator","AppText","artikalsApi","Button","Card","colors","routes","Screen","fieldNames","id","title","value","Item","item","onPress","style","styles","ArtikalsScreen","navigation","artikalData","setArtikalData","imeArtikal","setImeArtikal","error","setError","loading","setLoading","selectedId","setSelectedId","sortType","setSortType","console","log","getAllArtikals","flattenObject","ob","toReturn","Object","keys","map","i","flatObject","x","getArtikals","response","ok","data","handleChange","text","getArtikalsByIme","renderItem","backgroundColor","sortFlatList","type","types","ime_artikal","cena","vid_id","sorted","sort","a","b","fieldA","toUpperCase","fieldB","screen","height","borderColor","borderWidth","flexDirection","artikal_id","toString","ime_vid","steuerrelevant","navigate","ARTIKAL_EDIT","StyleSheet","create","padding","light","container","flex","marginTop","StatusBar","currentHeight","marginVertical","marginHorizontal","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FlatList,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"react-native\";\nimport axios from \"axios\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport artikalsApi from \"../api/artikals\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\n\n// Begin: Fields for sorting-buttons\nconst fieldNames = [\n  {\n    id: \"1\",\n    title: \"A\",\n    value: \"ime_artikal\",\n  },\n  {\n    id: \"2\",\n    title: \"C\",\n    value: \"cena\",\n  },\n  {\n    id: \"3\",\n    title: \"V\",\n    value: \"Vid\",\n  },\n];\n// End: Fields for sorting-buttons\n\nconst Item = ({ item, onPress, style }) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n    <Text style={styles.title}>{item.title}</Text>\n  </TouchableOpacity>\n);\n\nfunction ArtikalsScreen({ navigation }) {\n  const [artikalData, setArtikalData] = useState([]);\n  const [imeArtikal, setImeArtikal] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [sortType, setSortType] = useState(\"ime_artikal\");\n\n  useEffect(() => {\n    console.log(\"1. useEffect\");\n\n    // getArtikalsApi.request();\n    getAllArtikals();\n\n    console.log(\"sortType = \" + sortType);\n\n    // sortFlatList(sortType);\n\n    console.log(\"2. useEffect\");\n    // }, [sortType]);\n  }, []);\n\n  var flattenObject = function flattenObject(ob) {\n    const toReturn = {};\n\n    Object.keys(ob).map((i) => {\n      if (typeof ob[i] === \"object\" && ob[i] !== null) {\n        const flatObject = flattenObject(ob[i]);\n        Object.keys(flatObject).map((x) => {\n          toReturn[`${i}.${x}`] = flatObject[x];\n          return x;\n        });\n      } else {\n        toReturn[i] = ob[i];\n      }\n      return i;\n    });\n    return toReturn;\n  };\n\n  const getAllArtikals = async () => {\n    console.log(\"START getAllArtikals-1\");\n\n    setLoading(true);\n    const response = await artikalsApi.getArtikals();\n    setLoading(false);\n\n    setError(!response.ok);\n\n    // console.log(\"5. artikalData: \" + JSON.stringify(response.data));\n    // console.log(\"6. response.data: \" + JSON.stringify(response.data[0]));\n    setArtikalData(response.data);\n\n    console.log(\"END getAllArtikals-1\");\n    return response;\n  };\n\n  const handleChange = async (text) => {\n    console.log(\"START handleChange\");\n    setImeArtikal(text);\n    if (!text) {\n      console.log(\"2. handleChange: text is empty\");\n      return;\n    }\n\n    console.log(\"imeArtikal = \" + imeArtikal);\n    console.log(\"text = \" + text);\n\n    setLoading(true);\n    const response = await artikalsApi.getArtikalsByIme(text);\n    setLoading(false);\n\n    setError(!response.ok);\n    setArtikalData(response.data);\n\n    console.log(\"error = \" + error);\n\n    console.log(\"END  handleChange\");\n  };\n\n  {\n    /* Begin: Process the tapping on sorting buttons */\n  }\n  const renderItem = ({ item }) => {\n    const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n\n    return (\n      <Item\n        item={item}\n        key={item.id}\n        onPress={() => {\n          setSelectedId(item.id);\n          console.log(\"1. renderItem, item.value = \" + item.value);\n          // setSortType(...item.value);\n          // setSortType(item);\n          console.log(\"2. renderItem, sortType = \" + sortType);\n          sortFlatList(item.value);\n        }}\n        style={{ backgroundColor }}\n      />\n    );\n  };\n  {\n    /* End: Process the tapping on sorting buttons */\n  }\n\n  // Begin: Sort by IME_ARTIKAL, CENA, VID\n  const sortFlatList = (type) => {\n    console.log(\"START sortFlatList\");\n\n    const types = {\n      ime_artikal: \"ime_artikal\",\n      cena: \"cena\",\n      vid_id: \"vid_id\",\n    };\n\n    setSortType(type);\n    // const sortProperty = types[type];\n    // const sortProperty = fieldNames[type];\n    // console.log(\"1. sortProperty = \" + JSON.stringify(sortProperty));\n    console.log(\"1. type = \" + type);\n    console.log(\"2. sortType = \" + sortType);\n\n    // console.log(\"3. artikalData = \" + JSON.stringify(artikalData, null, 2));\n\n    const sorted = [...artikalData].sort((a, b) => {\n      if (type === \"ime_artikal\") {\n        if (sortType !== \"ime_artikal\") {\n          console.log(\"SORT BY IME_ARTIKAL ASC\");\n          var fieldA = a.ime_artikal.toUpperCase();\n          var fieldB = b.ime_artikal.toUpperCase();\n        } else {\n          console.log(\"SORT BY IME_ARTIKAL DESC\");\n          var fieldA = b.ime_artikal.toUpperCase();\n          var fieldB = a.ime_artikal.toUpperCase();\n          setSortType(\"\");\n        }\n      } else if (type === \"cena\") {\n        console.log(\"SORT BY CENA\");\n        var fieldA = a.cena;\n        var fieldB = b.cena;\n      } else {\n        console.log(\"NO SORT\");\n        return 0;\n      }\n\n      if (fieldA < fieldB) {\n        return -1;\n      }\n      if (fieldA > fieldB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n\n    // const sorted = [artikalData].sort();\n\n    // console.log(\"4. sorted = \" + JSON.stringify(sorted, null, 2));\n\n    setArtikalData(sorted);\n\n    // console.log(\"5. artikalData = \" + JSON.stringify(artikalData, null, 2));\n\n    console.log(\"END sortFlatList\");\n  };\n  // End: Sort by IME_ARTIKAL, CENA, VID\n\n  return (\n    <Screen style={styles.screen}>\n      {error && (\n        <>\n          <AppText>Greshka!</AppText>\n          <Button title=\"Povtori\" onPress={getAllArtikals}></Button>\n        </>\n      )}\n      {/* Begin: Search by IME_ARTIKAL */}\n      <TextInput\n        style={{ height: 40, borderColor: \"gray\", borderWidth: 1 }}\n        onChangeText={handleChange}\n        value={imeArtikal}\n        placeholder={\"Ime na Artikal\"}\n      />\n      {/* End: Search by IME_ARTIKAL */}\n\n      {/* Begin: Sorting buttons on the top of the screen above the data-flat list */}\n      <FlatList\n        data={fieldNames}\n        contentContainerStyle={{ flexDirection: \"row\" }}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n        extraData={selectedId}\n      />\n      {/* End: Sorting buttons on the top of the screen above the data-flat list */}\n\n      <FlatList\n        // data={getArtikalsApi.data}\n        data={artikalData}\n        // keyExtractor={(item, index) => item.artikal_id}\n        // keyExtractor={(item, index) => {\n        //   return item.artikal_id.toString();\n        // }}\n        // keyExtractor={(item) => item.artikal_id.toString()}\n        keyExtractor={(item) => item.artikal_id.toString()}\n        // keyExtractor={(item) => item[0].toString()}\n        // keyExtractor={(item) => item[0]}\n        // keyExtractor={(item) => item[0].ime_artikal}\n        // keyExtractor={(item) => item.ime_artikal}\n        renderItem={({ item }) => (\n          <Card\n            // ARTIKAL_ID     = item[0]\n            // VID_ID         = item[1]\n            // IME_ARTIKAL    = item[2]\n            // CENA           = item[3]\n            // STEUERRELEVANT = item[4]\n            // INSDATE        = item[5]\n            // INSUSER        = item[6]\n            // UPDDATE        = item[7]\n            // UPDUSER        = item[8]\n            // key={item[0]}\n            key={item.artikal_id}\n            // title={item[2]}\n            title={`${item.ime_artikal} \\nID: ${item.artikal_id}`}\n            subTitle={`Cena: ${item.cena}\\nVid: ${item.ime_vid}\\nID: ${item.vid_id}\\nDanok: ${item.steuerrelevant}`}\n            // image={item.image}\n            onPress={() => navigation.navigate(routes.ARTIKAL_EDIT, item)}\n            // onPress={() => navigation.navigate(routes.ARTIKAL_DETAILS, item)}\n            // onPress={() => console.log(item[3])}\n            // onPress={() => console.log(item[3])}\n            // onPress={() => console.log(JSON.stringify(item).artikal_id)}\n            // onPress={() => console.log(JSON.stringify(item))}\n            // onPress={() => console.log(item.json({ \"content\": artikal_id }))}\n            // onPress={() => console.log(item.artikal_id)}\n          />\n        )}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default ArtikalsScreen;\n"]},"metadata":{},"sourceType":"module"}