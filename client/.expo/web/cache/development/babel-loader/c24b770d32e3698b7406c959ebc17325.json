{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\APPS\\\\DOMA_EVID\\\\ReactNative\\\\frontend\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from \"expo\";\nimport ArtikalsScreen from \"./app/screens/ArtikalsScreen\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var restoreUser = function restoreUser() {\n    var user;\n    return _regeneratorRuntime.async(function restoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getUser());\n\n          case 2:\n            user = _context.sent;\n            if (user) setUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!isReady) return React.createElement(AppLoading, {\n    startAsync: restoreUser,\n    onFinish: function onFinish() {\n      return setIsReady(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  });\n  return React.createElement(ArtikalsScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/APPS/DOMA_EVID/ReactNative/frontend/App.js"],"names":["StatusBar","React","useState","AppLoading","ArtikalsScreen","App","isReady","setIsReady","restoreUser","authStorage","getUser","user","setUser","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACEH,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBI,OADqB;AAAA,MACZC,UADY;;AAG5B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCC,WAAW,CAACC,OAAZ,EADD;;AAAA;AACZC,YAAAA,IADY;AAElB,gBAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAKA,MAAI,CAACL,OAAL,EACE,OACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEE,WAAxB;AAAqC,IAAA,QAAQ,EAAE;AAAA,aAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAIF,SAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF;AAOD;AAED,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { AppLoading } from \"expo\";\n\nimport ArtikalsScreen from \"./app/screens/ArtikalsScreen\";\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  const restoreUser = async () => {\n    const user = await authStorage.getUser();\n    if (user) setUser(user);\n  };\n\n  if (!isReady)\n    return (\n      <AppLoading startAsync={restoreUser} onFinish={() => setIsReady(true)} />\n    );\n\n  return (\n    // <View style={styles.container}>\n    //   <Text>Test App</Text>\n    //   <StatusBar style=\"auto\" />\n    // </View>\n    <ArtikalsScreen />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}