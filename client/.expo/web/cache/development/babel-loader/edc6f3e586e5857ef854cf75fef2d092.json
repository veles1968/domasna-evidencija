{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\APPS\\\\DOMA_EVID\\\\ReactNative\\\\frontend\\\\app\\\\screens\\\\PrimanjasScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport primanjasApi from \"../api/primanja\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nvar fieldNames = [{\n  id: \"1\",\n  title: \"D\",\n  value: \"datum\"\n}, {\n  id: \"2\",\n  title: \"T\",\n  value: \"tip_primanje\"\n}, {\n  id: \"3\",\n  title: \"I\",\n  value: \"iznos\"\n}];\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, item.title));\n};\n\nvar initialPrimanja = [{\n  primanja_id: 0,\n  valuta_id: 9,\n  vraboten_id: 0,\n  iznos: 0,\n  mesec: 0,\n  tip_primanje: \"prazno\",\n  datum: 0,\n  odnossodem: 0,\n  vobanka: 0,\n  trans_id: 0,\n  insdate: 0,\n  insuser: 0,\n  upddate: 0,\n  upduser: 0,\n  ime_vraboten: 0,\n  ime_valuta: 0\n}];\n\nfunction PrimanjasScreen(_ref2) {\n  var _this2 = this;\n\n  var navigator = _ref2.navigator;\n\n  var _useState = useState(initialPrimanja),\n      _useState2 = _slicedToArray(_useState, 2),\n      primanjaData = _useState2[0],\n      setPrimanjaData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tipPrimanje = _useState4[0],\n      setTipPrimanje = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedId = _useState10[0],\n      setSelectedId = _useState10[1];\n\n  var _useState11 = useState(\"datum\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sortType = _useState12[0],\n      setSortType = _useState12[1];\n\n  useEffect(function () {\n    console.log(\"1. useEffect\");\n    gettAllPrimanjas();\n    console.log(\"sortType = \" + sortType);\n    console.log(\"2. useEffect\");\n  }, []);\n\n  var gettAllPrimanjas = function gettAllPrimanjas() {\n    var response;\n    return _regeneratorRuntime.async(function gettAllPrimanjas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"START gettAllPrimanjas-1\");\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(primanjasApi.getPrimanjas());\n\n          case 4:\n            response = _context.sent;\n            setLoading(false);\n            setError(!response.ok);\n            setPrimanjaData(response.data);\n            console.log(\"END gettAllPrimanjas-1\");\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleChange = function handleChange(text) {\n    var response;\n    return _regeneratorRuntime.async(function handleChange$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"START handleChange\");\n            setTipPrimanje(text);\n\n            if (text) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.log(\"2. handleChange: text is empty\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            console.log(\"tipPrimanje = \" + tipPrimanje);\n            console.log(\"text = \" + text);\n            setLoading(true);\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(primanjasApi.getPrimanjasByTip(text));\n\n          case 10:\n            response = _context2.sent;\n            setLoading(false);\n            setError(!response.ok);\n            setPrimanjaData(response.data);\n            console.log(\"primanjaData = \" + JSON.stringify(primanjaData, null, 2));\n            console.log(\"error = \" + error);\n            console.log(\"END  handleChange\");\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  {}\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return React.createElement(Item, {\n      item: item,\n      key: item.id,\n      onPress: function onPress() {\n        setSelectedId(item.id);\n        console.log(\"1. renderItem, item.value = \" + item.value);\n        console.log(\"2. renderItem, sortType = \" + sortType);\n        sortFlatList(item.value);\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    });\n  };\n\n  {}\n\n  var sortFlatList = function sortFlatList(type) {\n    console.log(\"START sortFlatList\");\n    var types = {\n      datum: \"datum\",\n      tip_primanje: \"tip_primanje\",\n      iznos: \"iznos\"\n    };\n    setSortType(type);\n    console.log(\"1. type = \" + type);\n    console.log(\"2. sortType = \" + sortType);\n\n    var sorted = _toConsumableArray(primanjaData).sort(function (a, b) {\n      if (type === \"datum\") {\n        if (sortType !== \"datum\") {\n          console.log(\"SORT BY DATUM ASC\");\n          var fieldA = a.datum.toUpperCase();\n          var fieldB = b.datum.toUpperCase();\n        } else {\n          console.log(\"SORT BY DATUM DESC\");\n          var fieldA = b.datum.toUpperCase();\n          var fieldB = a.datum.toUpperCase();\n          setSortType(\"\");\n        }\n      } else if (type === \"tip_primanje\") {\n        console.log(\"SORT BY TIP_PRIMANJE\");\n        var fieldA = a.tip_primanje;\n        var fieldB = b.tip_primanje;\n      } else {\n        console.log(\"NO SORT\");\n        return 0;\n      }\n\n      if (fieldA < fieldB) {\n        return -1;\n      }\n\n      if (fieldA > fieldB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    setPrimanjaData(sorted);\n    console.log(\"END sortFlatList\");\n  };\n\n  function convertUTCDateToLocalDate(date) {\n    var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n    var offset = date.getTimezoneOffset() / 60;\n    var hours = date.getHours();\n    newDate.setHours(hours - offset);\n    return newDate;\n  }\n\n  function getTitle(primanja) {\n    return primanja.tip_primanje;\n  }\n\n  function getSubTitle(primanja) {\n    var datumLocale = new Date(primanja.datum);\n    var datumYear = datumLocale.getFullYear;\n    return \"Iznos: \" + primanja.iznos + \" \" + primanja.ime_valuta + \"\\nDatum: \" + datumYear;\n  }\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, \"Greshka!\"), React.createElement(Button, {\n    title: \"Povtori\",\n    onPress: gettAllPrimanjas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: \"gray\",\n      borderWidth: 1\n    },\n    onChangeText: handleChange,\n    value: tipPrimanje,\n    placeholder: \"Tip na Primanje\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: fieldNames,\n    contentContainerStyle: {\n      flexDirection: \"row\"\n    },\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: primanjaData,\n    keyExtractor: function keyExtractor(item) {\n      return item.primanja_id.toString();\n    },\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(Card, {\n        key: item.primanja_id,\n        title: getTitle(item),\n        subTitle: getSubTitle(item),\n        onPress: function onPress() {\n          return navigation.navigate(routes.PRIMANJA_EDIT, item);\n        },\n        onPress: function onPress() {\n          return console.log(convertUTCDateToLocalDate(new Date(item.datum)).toLocaleString());\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\nexport default PrimanjasScreen;","map":{"version":3,"sources":["C:/APPS/DOMA_EVID/ReactNative/frontend/app/screens/PrimanjasScreen.js"],"names":["React","useEffect","useState","axios","ActivityIndicator","AppText","primanjasApi","Button","Card","colors","routes","Screen","fieldNames","id","title","value","Item","item","onPress","style","styles","initialPrimanja","primanja_id","valuta_id","vraboten_id","iznos","mesec","tip_primanje","datum","odnossodem","vobanka","trans_id","insdate","insuser","upddate","upduser","ime_vraboten","ime_valuta","PrimanjasScreen","navigator","primanjaData","setPrimanjaData","tipPrimanje","setTipPrimanje","error","setError","loading","setLoading","selectedId","setSelectedId","sortType","setSortType","console","log","gettAllPrimanjas","getPrimanjas","response","ok","data","handleChange","text","getPrimanjasByTip","JSON","stringify","renderItem","backgroundColor","sortFlatList","type","types","sorted","sort","a","b","fieldA","toUpperCase","fieldB","convertUTCDateToLocalDate","date","newDate","Date","getTime","getTimezoneOffset","offset","hours","getHours","setHours","getTitle","primanja","getSubTitle","datumLocale","datumYear","getFullYear","screen","height","borderColor","borderWidth","flexDirection","toString","navigation","navigate","PRIMANJA_EDIT","toLocaleString","StyleSheet","create","padding","light","container","flex","marginTop","StatusBar","currentHeight","marginVertical","marginHorizontal","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nimport ActivityIndicator from \"../components/ActivityIndicator\";\r\nimport AppText from \"../components/Text\";\r\nimport primanjasApi from \"../api/primanja\";\r\nimport Button from \"../components/Button\";\r\nimport Card from \"../components/Card\";\r\nimport colors from \"../config/colors\";\r\nimport routes from \"../navigation/routes\";\r\nimport Screen from \"../components/Screen\";\r\n\r\n// Begin: Fields for sorting-buttons\r\nconst fieldNames = [\r\n  {\r\n    id: \"1\",\r\n    title: \"D\",\r\n    value: \"datum\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"T\",\r\n    value: \"tip_primanje\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"I\",\r\n    value: \"iznos\",\r\n  },\r\n];\r\n// End: Fields for sorting-buttons\r\n\r\nconst Item = ({ item, onPress, style }) => (\r\n  <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\r\n    <Text style={styles.title}>{item.title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst initialPrimanja = [\r\n  {\r\n    primanja_id: 0,\r\n    valuta_id: 9,\r\n    vraboten_id: 0,\r\n    iznos: 0,\r\n    mesec: 0,\r\n    tip_primanje: \"prazno\",\r\n    datum: 0,\r\n    odnossodem: 0,\r\n    vobanka: 0,\r\n    trans_id: 0,\r\n    insdate: 0,\r\n    insuser: 0,\r\n    upddate: 0,\r\n    upduser: 0,\r\n    ime_vraboten: 0,\r\n    ime_valuta: 0,\r\n    // datum_locale: 0,\r\n  },\r\n];\r\n\r\nfunction PrimanjasScreen({ navigator }) {\r\n  const [primanjaData, setPrimanjaData] = useState(initialPrimanja);\r\n  const [tipPrimanje, setTipPrimanje] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [sortType, setSortType] = useState(\"datum\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"1. useEffect\");\r\n\r\n    gettAllPrimanjas();\r\n\r\n    console.log(\"sortType = \" + sortType);\r\n\r\n    console.log(\"2. useEffect\");\r\n  }, []);\r\n\r\n  const gettAllPrimanjas = async () => {\r\n    console.log(\"START gettAllPrimanjas-1\");\r\n\r\n    setLoading(true);\r\n    const response = await primanjasApi.getPrimanjas();\r\n    setLoading(false);\r\n\r\n    setError(!response.ok);\r\n\r\n    setPrimanjaData(response.data);\r\n\r\n    console.log(\"END gettAllPrimanjas-1\");\r\n    return response;\r\n  };\r\n\r\n  const handleChange = async (text) => {\r\n    console.log(\"START handleChange\");\r\n    setTipPrimanje(text);\r\n    if (!text) {\r\n      console.log(\"2. handleChange: text is empty\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"tipPrimanje = \" + tipPrimanje);\r\n    console.log(\"text = \" + text);\r\n\r\n    setLoading(true);\r\n    const response = await primanjasApi.getPrimanjasByTip(text);\r\n    setLoading(false);\r\n\r\n    setError(!response.ok);\r\n    setPrimanjaData(response.data);\r\n\r\n    // let primanjaData = primanjaData.map(primanje => {\r\n    //   primanje.datum_locale = \"01.01.2021\";\r\n    // });\r\n\r\n    console.log(\"primanjaData = \" + JSON.stringify(primanjaData, null, 2));\r\n\r\n    console.log(\"error = \" + error);\r\n\r\n    console.log(\"END  handleChange\");\r\n  };\r\n\r\n  {\r\n    /* Begin: Process the tapping on sorting buttons */\r\n  }\r\n  const renderItem = ({ item }) => {\r\n    const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n\r\n    return (\r\n      <Item\r\n        item={item}\r\n        key={item.id}\r\n        onPress={() => {\r\n          setSelectedId(item.id);\r\n          console.log(\"1. renderItem, item.value = \" + item.value);\r\n          // setSortType(...item.value);\r\n          // setSortType(item);\r\n          console.log(\"2. renderItem, sortType = \" + sortType);\r\n          sortFlatList(item.value);\r\n        }}\r\n        style={{ backgroundColor }}\r\n      />\r\n    );\r\n  };\r\n  {\r\n    /* End: Process the tapping on sorting buttons */\r\n  }\r\n\r\n  // Begin: Sort by DATUM, TIP_PRIMANJE, VID\r\n  const sortFlatList = (type) => {\r\n    console.log(\"START sortFlatList\");\r\n\r\n    const types = {\r\n      datum: \"datum\",\r\n      tip_primanje: \"tip_primanje\",\r\n      iznos: \"iznos\",\r\n    };\r\n\r\n    setSortType(type);\r\n    // const sortProperty = types[type];\r\n    // const sortProperty = fieldNames[type];\r\n    // console.log(\"1. sortProperty = \" + JSON.stringify(sortProperty));\r\n    console.log(\"1. type = \" + type);\r\n    console.log(\"2. sortType = \" + sortType);\r\n\r\n    // console.log(\"3. primanjaData = \" + JSON.stringify(primanjaData, null, 2));\r\n\r\n    const sorted = [...primanjaData].sort((a, b) => {\r\n      if (type === \"datum\") {\r\n        if (sortType !== \"datum\") {\r\n          console.log(\"SORT BY DATUM ASC\");\r\n          var fieldA = a.datum.toUpperCase();\r\n          var fieldB = b.datum.toUpperCase();\r\n        } else {\r\n          console.log(\"SORT BY DATUM DESC\");\r\n          var fieldA = b.datum.toUpperCase();\r\n          var fieldB = a.datum.toUpperCase();\r\n          setSortType(\"\");\r\n        }\r\n      } else if (type === \"tip_primanje\") {\r\n        console.log(\"SORT BY TIP_PRIMANJE\");\r\n        var fieldA = a.tip_primanje;\r\n        var fieldB = b.tip_primanje;\r\n      } else {\r\n        console.log(\"NO SORT\");\r\n        return 0;\r\n      }\r\n\r\n      if (fieldA < fieldB) {\r\n        return -1;\r\n      }\r\n      if (fieldA > fieldB) {\r\n        return 1;\r\n      }\r\n\r\n      // names must be equal\r\n      return 0;\r\n    });\r\n\r\n    // const sorted = [primanjaData].sort();\r\n\r\n    // console.log(\"4. sorted = \" + JSON.stringify(sorted, null, 2));\r\n\r\n    setPrimanjaData(sorted);\r\n\r\n    // console.log(\"5. primanjaData = \" + JSON.stringify(primanjaData, null, 2));\r\n\r\n    console.log(\"END sortFlatList\");\r\n  };\r\n  // End: Sort by DATUM, TIP_PRIMANJE, VID\r\n\r\n  function convertUTCDateToLocalDate(date) {\r\n    var newDate = new Date(\r\n      date.getTime() + date.getTimezoneOffset() * 60 * 1000\r\n    );\r\n\r\n    var offset = date.getTimezoneOffset() / 60;\r\n    var hours = date.getHours();\r\n\r\n    newDate.setHours(hours - offset);\r\n\r\n    return newDate;\r\n  }\r\n\r\n  function getTitle(primanja) {\r\n    return primanja.tip_primanje;\r\n  }\r\n\r\n  function getSubTitle(primanja) {\r\n    // var datumLocale = convertUTCDateToLocalDate(new Date(primanja.datum));\r\n    const datumLocale = new Date(primanja.datum);\r\n    const datumYear = datumLocale.getFullYear;\r\n\r\n    return `Iznos: ${primanja.iznos} ${\r\n      primanja.ime_valuta\r\n      // }\\nDatum: ${datumLocale.toLocaleString()}`;\r\n    }\\nDatum: ${datumYear}`;\r\n  }\r\n\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      {error && (\r\n        <>\r\n          <AppText>Greshka!</AppText>\r\n          <Button\r\n            title=\"Povtori\"\r\n            // onPress={getArtikalsApi.request()}\r\n            onPress={gettAllPrimanjas}\r\n          ></Button>\r\n        </>\r\n      )}\r\n      {/* Begin: Search by TIP_PRIMANJE */}\r\n      <TextInput\r\n        style={{ height: 40, borderColor: \"gray\", borderWidth: 1 }}\r\n        onChangeText={handleChange}\r\n        value={tipPrimanje}\r\n        placeholder={\"Tip na Primanje\"}\r\n      />\r\n      {/* End: Search by TIP_PRIMANJE */}\r\n\r\n      {/* Begin: Sorting buttons on the top of the screen above the data-flat list */}\r\n      <FlatList\r\n        data={fieldNames}\r\n        contentContainerStyle={{ flexDirection: \"row\" }}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n        extraData={selectedId}\r\n      />\r\n      {/* End: Sorting buttons on the top of the screen above the data-flat list */}\r\n\r\n      <FlatList\r\n        // data={getArtikalsApi.data}\r\n        data={primanjaData}\r\n        // keyExtractor={(item, index) => item.primanja_id}\r\n        // keyExtractor={(item, index) => {\r\n        //   return item.primanja_id.toString();\r\n        // }}\r\n        // keyExtractor={(item) => item.primanja_id.toString()}\r\n        keyExtractor={(item) => item.primanja_id.toString()}\r\n        // keyExtractor={(item) => item[0].toString()}\r\n        // keyExtractor={(item) => item[0]}\r\n        // keyExtractor={(item) => item[0].datum}\r\n        // keyExtractor={(item) => item.datum}\r\n        renderItem={({ item }) => (\r\n          <Card\r\n            // ARTIKAL_ID     = item[0]\r\n            // VID_ID         = item[1]\r\n            // DATUM    = item[2]\r\n            // TIP_PRIMANJE           = item[3]\r\n            // STEUERRELEVANT = item[4]\r\n            // INSDATE        = item[5]\r\n            // INSUSER        = item[6]\r\n            // UPDDATE        = item[7]\r\n            // UPDUSER        = item[8]\r\n            // key={item[0]}\r\n            key={item.primanja_id}\r\n            // title={`${item.tip_primanje}`}\r\n            title={getTitle(item)}\r\n            subTitle={getSubTitle(item)}\r\n            onPress={() => navigation.navigate(routes.PRIMANJA_EDIT, item)}\r\n            // onPress={() => navigation.navigate(routes.ARTIKAL_DETAILS, item)}\r\n            onPress={() =>\r\n              console.log(\r\n                convertUTCDateToLocalDate(new Date(item.datum)).toLocaleString()\r\n              )\r\n            }\r\n            // onPress={() => console.log(item[3])}\r\n            // onPress={() => console.log(JSON.stringify(item).primanja_id)}\r\n            // onPress={() => console.log(JSON.stringify(item))}\r\n            // onPress={() => console.log(item.json({ \"content\": primanja_id }))}\r\n            // onPress={() => console.log(item.primanja_id)}\r\n          />\r\n        )}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 20,\r\n    backgroundColor: colors.light,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight || 0,\r\n  },\r\n  item: {\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n  },\r\n});\r\n\r\nexport default PrimanjasScreen;\r\n"]},"metadata":{},"sourceType":"module"}