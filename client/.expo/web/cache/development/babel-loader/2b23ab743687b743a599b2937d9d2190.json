{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\APPS\\\\DOMA_EVID\\\\ReactNative\\\\frontend\\\\app\\\\screens\\\\ArtikalsScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport artikalsApi from \"../api/artikals\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nvar artikals = [{\n  artikal_id: 1,\n  ime_artikal: \"Red jacket for sale\",\n  cena: 100\n}, {\n  artikal_id: 2,\n  ime_artikal: \"Couch in greasssssst condition\",\n  cena: 1000\n}];\n\nfunction ArtikalsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      artikals = _useState4[0],\n      setArtikals = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"1. useEffect\");\n    loadArtikals();\n    console.log(\"2. useEffect\");\n  }, []);\n\n  var loadArtikals = function loadArtikals() {\n    var response;\n    return _regeneratorRuntime.async(function loadArtikals$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"START loadArtikals\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(artikalsApi.getArtikals());\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 9;\n              break;\n            }\n\n            alert(response.problem);\n            return _context.abrupt(\"return\", setError(true));\n\n          case 9:\n            setError(false);\n            console.log(\"Error: \" + error);\n            setArtikals(response.data);\n\n          case 12:\n            console.log(\"END loadArtikals\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Greshka!\"), React.createElement(Button, {\n    ime_artikal: \"Povtori\",\n    onPress: loadArtikals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), React.createElement(FlatList, {\n    data: artikals,\n    keyExtractor: function keyExtractor(item) {\n      return item.artikal_id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        key: item.artikal_id,\n        ime_artikal: item.ime_artikal,\n        subTitle: item.cena,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ArtikalsScreen;","map":{"version":3,"sources":["C:/APPS/DOMA_EVID/ReactNative/frontend/app/screens/ArtikalsScreen.js"],"names":["React","useEffect","useState","ActivityIndicator","Button","Card","colors","artikalsApi","routes","Screen","AppText","artikals","artikal_id","ime_artikal","cena","ArtikalsScreen","navigation","error","setError","setArtikals","console","log","loadArtikals","getArtikals","response","ok","alert","problem","data","styles","screen","item","StyleSheet","create","padding","backgroundColor","light"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport artikalsApi from \"../api/artikals\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\n// import useApi from \"../hooks/useApi\";\n\nconst artikals = [\n  {\n    artikal_id: 1,\n    ime_artikal: \"Red jacket for sale\",\n    cena: 100,\n  },\n  {\n    artikal_id: 2,\n    ime_artikal: \"Couch in greasssssst condition\",\n    cena: 1000,\n  },\n];\n\nfunction ArtikalsScreen({ navigation }) {\n  // const getArtikalsApi = useApi(artikalsApi.getArtikals);\n  const [error, setError] = useState(false);\n  const [artikals, setArtikals] = useState([]);\n\n  useEffect(() => {\n    console.log(\"1. useEffect\");\n\n    // getArtikalsApi.request();\n    loadArtikals();\n\n    console.log(\"2. useEffect\");\n  }, []);\n\n  const loadArtikals = async () => {\n    console.log(\"START loadArtikals\");\n\n    const response = await artikalsApi.getArtikals();\n\n    if (!response.ok) {\n      alert(response.problem);\n      return setError(true);\n    } else {\n      // console.log(response.data);\n      setError(false);\n      console.log(\"Error: \" + error);\n\n      setArtikals(response.data);\n    }\n\n    console.log(\"END loadArtikals\");\n  };\n\n  return (\n    <Screen style={styles.screen}>\n      {error && (\n        <>\n          <AppText>Greshka!</AppText>\n          <Button ime_artikal=\"Povtori\" onPress={loadArtikals}></Button>\n        </>\n      )}\n      <FlatList\n        data={artikals}\n        keyExtractor={(item) => item.artikal_id}\n        renderItem={({ item }) => (\n          <Card\n            key={item.artikal_id}\n            ime_artikal={item.ime_artikal}\n            subTitle={item.cena}\n            // image={item.image}\n            // onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n          />\n        )}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n});\n\nexport default ArtikalsScreen;\n"]},"metadata":{},"sourceType":"module"}